import asyncio
from motor.motor_asyncio import AsyncIOMotorClient

# Sample products
PRODUCTS = [
    {
        "id": 1,
        "name": "iPhone 15 Pro MAX",
        "description": "Latest iPhone with advanced features",
        "price": 99999,
        "category": "Electronics",
        "image": "https://images.unsplash.com/photo-1697284959152-32ef13855932?w=800",
        "rating": 4.8,
        "reviews": 1250,
        "inStock": True
    },
    {
        "id": 2,
        "name": "Samsung Galaxy S24",
        "description": "Premium Android smartphone",
        "price": 79999,
        "category": "Electronics", 
        "image": "https://images.unsplash.com/photo-1610945415295-d9bbf067e59c?w=400",
        "rating": 4.6,
        "reviews": 890,
        "inStock": True
    },
    {
        "id": 3,
        "name": "Nike Air Max",
        "description": "Comfortable running shoes",
        "price": 8999,
        "category": "Clothing",
        "image": "https://images.unsplash.com/photo-1542291026-7eec264c27ff?w=400",
        "rating": 4.4,
        "reviews": 567,
        "inStock": True
    },
    {
        "id": 4,
        "name": "MacBook Pro M3",
        "description": "Powerful laptop for professionals",
        "price": 199999,
        "category": "Electronics",
        "image": "https://images.unsplash.com/photo-1496181133206-80ce9b88a853?w=400",
        "rating": 4.9,
        "reviews": 423,
        "inStock": True
    },
    {
        "id": 5,
        "name": "Levi's Jeans",
        "description": "Classic denim jeans",
        "price": 3999,
        "category": "Clothing",
        "image": "https://images.unsplash.com/photo-1542272604-787c3835535d?w=400",
        "rating": 4.2,
        "reviews": 234,
        "inStock": True
    }
]

async def populate():
    client = AsyncIOMotorClient("mongodb://localhost:27017")
    db = client.megacart
    
    print("Clearing existing products...")
    await db.products.delete_many({})
    
    print("Inserting new products...")
    result = await db.products.insert_many(PRODUCTS)
    
    print(f"Inserted {len(result.inserted_ids)} products")
    
    count = await db.products.count_documents({})
    print(f"Total products: {count}")
    
    client.close()

if __name__ == "__main__":
    asyncio.run(populate())

# Virtual environment में ensure करें कि आप हैं
python populate_db.py






